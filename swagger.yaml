openapi: 3.0.0
info:
  title: Next.js API Documentation
  version: '1.0.0'
  description: API documentation for authentication and analytics endpoints

servers:
  - url: https://moonshot-2024-10-12.vercel.app/api
    description: API base URL

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    Error:
      type: object
      properties:
        status:
          type: string
          enum: [error]
        errorCode:
          type: string
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
    
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    
    LoginResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        data:
          type: object
          properties:
            token:
              type: string
        message:
          type: string
    
    RegisterRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          description: Must be at least 8 characters with one uppercase, lowercase, number, and special character
    
    RegisterResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        message:
          type: string
        data:
          type: object
          properties:
            userId:
              type: string
            email:
              type: string
    
    UserResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        data:
          type: object
          properties:
            user:
              type: object
              properties:
                id:
                  type: string
                email:
                  type: string
        message:
          type: string
    
    AnalyticsResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        data:
          type: array
          items:
            type: object
            properties:
              day:
                type: string
                format: date
              ageGroup:
                type: string
                enum: [AGE_15_25, OVER_25]
              gender:
                type: string
                enum: [MALE, FEMALE]
        message:
          type: string
        meta:
          type: object
          properties:
            totalItems:
              type: integer
            itemsPerPage:
              type: integer

paths:
  /auth/login:
    post:
      summary: User login
      description: Authenticate a user and receive a JWT token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/register:
    post:
      summary: User registration
      description: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: Validation error or user already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/user:
    get:
      summary: Get user information
      description: Retrieve the current user's information
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /analytics:
    get:
      summary: Get analytics data
      description: Retrieve analytics data with optional filtering
      tags:
        - Analytics
      security:
        - BearerAuth: []
      parameters:
        - name: start_day
          in: query
          description: Start date in DD/MM/YYYY format
          schema:
            type: string
        - name: end_day
          in: query
          description: End date in DD/MM/YYYY format
          schema:
            type: string
        - name: age_group
          in: query
          description: Age group filter
          schema:
            type: string
            enum: [AGE_15_25, OVER_25]
        - name: gender
          in: query
          description: Gender filter
          schema:
            type: string
            enum: [MALE, FEMALE]
      responses:
        '200':
          description: Analytics data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
